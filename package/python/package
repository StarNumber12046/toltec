#!/usr/bin/env bash
# Copyright (c) 2023 The Toltec Contributors
# SPDX-License-Identifier: MIT

pkgnames=(toltec-python)
pkgdesc="Python is a programming language that lets you work quickly and integrate systems more effectively."
url="https://python.org"
_python_ver=3.12.1
_libffi_ver=3.3
pkgver=${_python_ver}-1
timestamp=2023-12-08T00:00Z
section=utils
maintainer="Eeems <eeems@eeems.email>"
license=PSF-2.0
flags=(nostrip)

image=python:v3.1
source=(
    "https://www.python.org/ftp/python/${_python_ver}/Python-${_python_ver}.tar.xz"
    "https://github.com/libffi/libffi/releases/download/v${_libffi_ver}/libffi-${_libffi_ver}.tar.gz"
)
sha256sums=(
    8dfb8f426fcd226657f9e2bd5f1e96e53264965176fa17d32658e873591aeb21
    72fba7922703ddfa7a028d513ac15a85c8d54c8d67f55fa5a4802885dc652056
)
noextract=("libffi-${_libffi_ver}.tar.gz")
makedepends=("build:python${_python_ver%.*}")

build() {
    tar -xf "libffi-${_libffi_ver}.tar.gz"
    cd "libffi-${_libffi_ver}"
    ./configure \
        --prefix=/usr \
        --host="$CHOST"
    make --jobs="$(nproc)"
    make DESTDIR="$SYSROOT" install
    cd "$srcdir"
    rm -rf "libffi-${_libffi_ver}"
    ./configure \
        --enable-optimizations \
        --with-lto \
        --prefix=/opt \
        --build="$(./config.guess)" \
        --host="$CHOST" \
        --with-build-python="$(which "python${_python_ver%.*}")" \
        --with-ensurepip=no \
        ac_cv_buggy_getaddrinfo=no \
        ac_cv_file__dev_ptmx=yes \
        ac_cv_file__dev_ptc=no
    make --jobs="$(nproc)"
    make DESTDIR=dist altinstall

}

package() {
    cd "$srcdir"
    cp -ar dist/. "$pkgdir"
}

configure() {
    "/opt/bin/python${_python_ver%.*}" -m ensurepip --upgrade --altinstall
}

postremove() {
    if [ -d "/opt/lib/python${_python_ver%.*}/site-packages" ]; then
        echo "WARNING: /opt/lib/python${_python_ver%.*}/site-packages is not empty."
        echo "         You will need to remove the directory to fully uninstall any"
        echo "         python modules installed with pip."
    fi
}
